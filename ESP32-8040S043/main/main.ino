/*
  //=====================================================================
  // THX TO https://macsbug.wordpress.com/2022/11/29/esp32-8048s043/
  //=====================================================================
  //  HARD              : ESP32_8048S043C
  //  Display          : 4.3" 800x480 RGB LCD Touch GT911
  //  Dev environment   : Arduino IDE 1.8.19
  //  Board Manager    : arduino-esp32 2.0.5
  //  Board            : "ESP32S3 Dev Module"
  //  Upload Speed     : "921600"
  //  USB Mode         : "Hardware CDC and JTAG"
  //  USB CDC On Boot  : "Disable"
  //  USB Firmware MSC On Boot : "Disable"
  //  USB DFU On Boot  : "Disable"
  //  Upload Mode      : "UART0 / Hardware CDC"
  //  CPU Frequency    : "240MHz (WiFi/BT)"
  //  Core Degug Level : "None"
  //  Arduino Runs On  : "Core 1"
  //  Events Run On    : "Core 1"
  //  Rease All Flash before Sketxh Upload : "Disable"
  //--------------------------------------------------------------------
  //  Flash Mode       : "QIO 120MHz"
  //  Flash Size       : "16MB (128Mb)"
  //  Partition Scheme : "16MB Flash (2MB APP/12.5MB FATFS)"
  //  PSRAM            : "OPI PSRAM"
	//	Programmer			 : ESPTool (checked)
  //=====================================================================
*/
#include <Arduino.h>
#include <LovyanGFX.hpp>
#include <lgfx_user/LGFX_ESP32S3_RGB_ESP32-8048S043.h>
#include "TAMC_GT911.h"
#include <FS.h>
#include <SD.h>

LGFX tft;
bool touched; // max  478,270
uint16_t tX, tY, bc = 0; // touch x y , bgcolor
uint16_t ltX=0, ltY=0; // touch x y , bgcolor

const uint16_t bitmap_cursor [] PROGMEM = {
	// 'arrow, 20x20px
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
	0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x1082, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffdf, 0xffdf, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffdf, 0xffff, 0xffff, 
	0xffff, 0xffff, 0xd69a, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 
	0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xb596, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0x9492, 0x0000, 0x4208, 0xffff, 0x4208, 
	0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0000, 
	0x0000, 0x94b2, 0xffff, 0xffff, 0x4208, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xffff, 
	0xffff, 0xd6ba, 0x0000, 0x0000, 0x0000, 0x0000, 0x94b2, 0xffff, 0xffff, 0x4208, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0xffff, 0xffff, 0xffff, 0xd6ba, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x94b2, 0xffff, 0xffff, 0x4208, 0x0841, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xffff, 0xd6ba, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x94b2, 0xffff, 0xffff, 0x4208, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0xffff, 0xd6ba, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x94b2, 0xffff, 0xffff, 0x4208, 0x0841, 0x0000, 0x0000, 0x0000, 0xd6ba, 0x0841, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x94b2, 0xffff, 0xffff, 0x4208, 0x0841, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x94b2, 
	0xffff, 0xffff, 0x4208, 0x0841, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x94b2, 0xffff, 0xffff, 0x4208, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x94b2, 0xffff, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
};

static LGFX_Sprite sprite(&tft);


void setup(void) {
  Serial.begin(115200);

  tft.init();
  tft.setRotation(0);
  tft.setBrightness(255); 
  tft.setColorDepth(24);

  tft.fillRect(10,10,34,34, TFT_GREEN);

	if (!SD.begin(10)) {
    Serial.println("Error al montar la tarjeta SD");
    // return;
  }
	uint8_t cardType = SD.cardType();
	  if(cardType == CARD_NONE){
    Serial.println("No SD card attached");
    return;
  }

  Serial.print("SD Card Type: ");
  if(cardType == CARD_MMC){
    Serial.println("MMC");
  } else if(cardType == CARD_SD){
    Serial.println("SDSC");
  } else if(cardType == CARD_SDHC){
    Serial.println("SDHC");
  } else {
    Serial.println("UNKNOWN");
  }

	sprite.createSprite(20, 20);
	sprite.fillCircle(32, 32, 22, 2);
	sprite.pushSprite(0,0);
}

void loop(){
  touched = tft.getTouch( &tX, &tY);
  if (touched) {
    Serial.printf("%d,%d\n", tX, tY);

    if(ltX!=tX || ltY!=tY){
      tft.startWrite();
      // tft.pushImage(tX-10,tY-10,20,20,bitmap_bg);
      // tft.fillRect(ltX-10,ltY-10,20,20, TFT_BLACK);
      tft.fillRect(ltX-17,ltY-17,34,34, TFT_BLACK);
      // tft.drawBitmap(ltX-10,ltY-10,bitmap_cursor,20,20,TFT_RED,TFT_BLUE);
      tft.fillRect(tX-17,ltY-17,34,34, TFT_TRANSPARENT);
      tft.pushImage(tX-10,tY-10,20,20,bitmap_cursor);
      // delay(5);
      tft.endWrite();
      ltX=tX;
      ltY=tY;
    }
  }
  
}